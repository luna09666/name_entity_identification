import re
import test

point_time = [
    r'[0-9]{2,4}年|',
    '[0-9]年|'
    '[0-9]{2,4}年[0-9]{1,2}月[0-9]{1,2}日|',
    '[0-9]{1,2}月[0-9]{1,2}日|',
    '[0-9]{1,2}月[0-9]{1,2}日[0-9]{2}：[0-9]{2}-[0-9]{2}：[0-9]{2}|',
    '[0-9]{1,2}日[0-9]{2}：[0-9]{2}|',
    '[0-9]{2}：[0-9]{2}|',
    '[0-9]{1,2}小时|2011|2013|',
    '[春夏秋冬][天季]{0,1}|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日[上中下]午|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日[凌早]晨|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日[夜傍]晚|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日[早晚]上|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日[早晚]|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日前后|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[^A-Za-z0-9_]{1,2}月[^A-Za-z0-9_]{1,2}日左右|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年[0-9]{1,2}月[初末]{0,1}|',
    '白天|深夜|早上|晚上|上午|中午|下午|清晨|傍晚|',
    '年末|月末|上年末|每日|每月|每年|每晚|暑假|那晚|今冬|中秋|昨[天日]|明[天日]|明早|明晚|重阳节|元旦|[今昨明前后]天|全年|全天|',
    '周[一二三四五六日天]|',
    '星期[一二三四五六天日]|',
    '[一二]{0,1}[零⚪一二三四五六七八九十同去后明前今]+年|',
    '[全本下上]周|',
    '[0-9]{2,4}-[0-9]{2,4}年|',
    '[0-9]{2,4}-[0-9]{1,2}-[0-9]{1,2}|',
    '[0-9]{2,4}-[0-9]{1,2}|'
    '[一二三四五六七八九十同去后明前今]+年以[上下]|',
    '[0-9]{1,2}日[上中下]午|',
    '[0-9]{1,2}个月'
]

point_org = [
    r'^中国$|^日本$|^印度$|^不丹$|^南海$|^越南$|^菲律宾$|^意大利$|^湖人$|^老鹰$|^活塞$|^帕克$|^太阳$|^台$|^中$|^俄$|^日$|UCLA|^美$|^苏联$|',
    '^[^A-Za-z0-9_]{2,}[局组院会校队局所国委司团站军师党协方联网部门府办社船连]$|',
    '^[^A-Za-z0-9_]{2,}中心$|',
    '^[^A-Za-z0-9_]{2,}大学$|',
    '^[^A-Za-z0-9_]{2,}小学$|',
    '^[^A-Za-z0-9_]{2,}University$|',
    '^[^A-Za-z0-9_]{2,}医院$|',
    '^[^A-Za-z0-9_]{2,}军区$|',
    '^[^A-Za-z0-9_]{2,}警方$|',
    '^[^A-Za-z0-9_]{2,}军方$',
    '^[^A-Za-z0-9_]{2,}军区$'
]


def ner(seq_list_no_stop, point, dataset, tag):
    pattern = ''.join(point)
    result = []

    for i in seq_list_no_stop:
        if re.search(pattern, i):
            result.append(i)

    print(result[:10])

    return test.test(seq_list_no_stop, dataset, result, tag)





